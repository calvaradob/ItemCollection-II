{"ast":null,"code":"var _jsxFileName = \"/Users/solandrea/Desktop/Escuela Digital/React JS/Clase 6/src/container/ItemListContainer/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ItemList from '../../components/ItemList';\nimport { productosRaw } from '../../mocks/productos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemListContainer = _ref => {\n  _s();\n\n  let {\n    greeting\n  } = _ref;\n  const [productos, setProductos] = useState([]);\n  const [pokemons, setPokemons] = useState([]);\n  /* const traerProductos = new Promise ((accept, reject)=> {\n    setTimeout(()=> {\n      accept(productosRaw)\n    }, 3000)\n  })\n  */\n  //Queremos que la petición a la API se ejecute cuando montamos el componente\n\n  useEffect(() => {\n    //La petición debe estar en una función asíncrona\n    const getPokemons = async () => {\n      try {\n        const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=10');\n        const data = await response.json();\n        console.log(data);\n        setPokemons(data.results);\n      } catch (error) {\n        alert(`Hubo un error: ${error.message}`);\n      }\n    };\n\n    getPokemons();\n  }, []);\n  console.log(pokemons); //Siempre que tengamos un array y queramos renderizar el contenido de cada elemento,\n  //vamos a utilizar el método MAP.\n  //El método map recorre cada uno de los elementos, lo procesa y me devuelve otro elemento procesado\n\n  return /*#__PURE__*/_jsxDEV(ItemList, {\n    pokemons: pokemons\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItemListContainer, \"mn3nDM2+eiMDkVkH5g3nY5xG1kI=\");\n\n_c = ItemListContainer;\nexport default ItemListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemListContainer\");","map":{"version":3,"names":["React","useEffect","useState","ItemList","productosRaw","ItemListContainer","greeting","productos","setProductos","pokemons","setPokemons","getPokemons","response","fetch","data","json","console","log","results","error","alert","message"],"sources":["/Users/solandrea/Desktop/Escuela Digital/React JS/Clase 6/src/container/ItemListContainer/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ItemList from '../../components/ItemList';\nimport { productosRaw } from '../../mocks/productos';\n\nconst ItemListContainer = ({greeting}) => {\n\n  const [productos, setProductos] = useState([])\n\n  const [pokemons, setPokemons] = useState([])\n  \n  /* const traerProductos = new Promise ((accept, reject)=> {\n    setTimeout(()=> {\n      accept(productosRaw)\n    }, 3000)\n  })\n */\n\n  //Queremos que la petición a la API se ejecute cuando montamos el componente\n  useEffect(()=> {\n\n    //La petición debe estar en una función asíncrona\n    const getPokemons = async () => {\n      try {\n        const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=10')\n        const data = await response.json();\n        console.log(data);\n        setPokemons(data.results);\n      } catch (error) {\n        alert(`Hubo un error: ${error.message}`)\n      }\n    }\n\n    getPokemons();\n\n  }, [])\n\n  console.log(pokemons);\n\n  //Siempre que tengamos un array y queramos renderizar el contenido de cada elemento,\n  //vamos a utilizar el método MAP.\n  //El método map recorre cada uno de los elementos, lo procesa y me devuelve otro elemento procesado\n  return (\n    <ItemList pokemons={pokemons}/>\n  )\n}\n\nexport default ItemListContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,YAAT,QAA6B,uBAA7B;;;AAEA,MAAMC,iBAAiB,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAExC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;EAEA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;EAEA;AACF;AACA;AACA;AACA;AACA;EAEE;;EACAD,SAAS,CAAC,MAAK;IAEb;IACA,MAAMU,WAAW,GAAG,YAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAA5B;QACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;QACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;QACAJ,WAAW,CAACI,IAAI,CAACI,OAAN,CAAX;MACD,CALD,CAKE,OAAOC,KAAP,EAAc;QACdC,KAAK,CAAE,kBAAiBD,KAAK,CAACE,OAAQ,EAAjC,CAAL;MACD;IACF,CATD;;IAWAV,WAAW;EAEZ,CAhBQ,EAgBN,EAhBM,CAAT;EAkBAK,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAhCwC,CAkCxC;EACA;EACA;;EACA,oBACE,QAAC,QAAD;IAAU,QAAQ,EAAEA;EAApB;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,CAxCD;;GAAMJ,iB;;KAAAA,iB;AA0CN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}